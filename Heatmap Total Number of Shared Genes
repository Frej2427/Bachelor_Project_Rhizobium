prodigal -i ref_genome_sequence.fasta -o gene_predictions.gbk -a total_gene_sequences.faa 


#!/bin/bash
#SBATCH --job-name=tblastn_shared_genes
#SBATCH --output=tblastn_shared_genes.out
#SBATCH --error=tblastn_shared_genes.err
#SBATCH --time=04:00:00
#SBATCH --cpus-per-task=4
#SBATCH --mem=16G

mkdir -p blast_outputs_shared_genes

for genome in annotations/ffn_files/*.ffn; do
    sample=$(basename "$genome" .ffn)
    makeblastdb -in "$genome" -dbtype nucl
    tblastn -query total_gene_sequences.faa \
            -db "$genome" \
            -outfmt "6 qseqid sseqid pident length evalue bitscore" \
            -evalue 1e-5 \
            -out blast_outputs_shared_genes/${sample}_blast.txt
done

for blast_file in blast_outputs_shared_genes/*_blast.txt; do
    sample=$(basename "$blast_file" _blast.txt)    
    awk '{
        if(!seen[$1] || $6 > max[$1]) {
            seen[$1]=1;
            max[$1]=$6;
            res[$1]=$0;
        }
    } END {
        for(gene in res) {
            print res[gene];
        }
    }' "$blast_file" > blast_outputs_shared_genes/${sample}_best_hits.txt
done


mkdir -p gene_presence
for blast_file in blast_outputs/*_best_hits.txt; do
    sample=$(basename "$blast_file" _best_hits.txt)
    awk '$3 >= 70 {print $1}' "$blast_file" > gene_presence/${sample}_present_genes.txt
done


strains=$(ls gene_presence/*_present_genes.txt | sed 's/gene_presence\///' | sed 's/_present_genes.txt//')
echo -ne "\t" > shared_genes_matrix.txt
for strain in $strains; do
  echo -ne "$strain\t" >> shared_genes_matrix.txt
done
echo "" >> shared_genes_matrix.txt

for strain1 in $strains; do
  echo -ne "$strain1\t" >> shared_genes_matrix.txt
  for strain2 in $strains; do
    shared=$(comm -12 <(sort gene_presence/${strain1}_present_genes.txt) <(sort gene_presence/${strain2}_present_genes.txt) | wc -l)
    echo -ne "$shared\t" >> shared_genes_matrix.txt
  done
  echo "" >> shared_genes_matrix.txt
done


library(pheatmap)
shared_genes <- read.table("shared_genes_matrix.txt", header=TRUE, row.names=1, sep="\t", check.names=FALSE)
shared_genes_matrix <- as.matrix(shared_genes)
diag(shared_genes_matrix) <- max(shared_genes_matrix, na.rm=TRUE)

pheatmap(
  shared_genes_matrix,
  clustering_distance_rows = "euclidean",
  clustering_distance_cols = "euclidean",
  clustering_method = "average",
  display_numbers = FALSE,
  color = colorRampPalette(c("navy", "white", "firebrick3"))(100),
  fontsize = 8,
  angle_col = 45,
  filename = "shared_genes_heatmap.pdf",
  show_rownames = FALSE,
  show_colnames = FALSE
)
